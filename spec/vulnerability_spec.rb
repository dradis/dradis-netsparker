require 'spec_helper'

describe Netsparker::Vulnerability do
  let(:doc) { described_class.new(nil) }

  describe '#cleanup_html' do
    it 'formats the html special characters' do
      sample = "<doc>&quot;&amp;&lt;&gt;&#39;</doc>"
      expected = "<doc>\"&<>\'</doc>"
      expect(doc.send(:cleanup_html, sample)).to eq(expected)
    end

    it 'outputs the CDATA text' do
      sample = "<doc><![CDATA[Sample Text]]></doc>"

      expected = "<doc>Sample Text</doc>"
      expect(doc.send(:cleanup_html, sample)).to eq(expected)
    end

    it 're-formats the html formatting tags to textile' do
      sample = "<doc>"\
        "<b>Bold</b>\n"\
        "<i>Italic</i>\n"\
        "<em>Emphasis</em>\n"\
        "<h2>Header</h2>\n"\
        "<strong>Strong</strong>\n"\
        "</doc>"

      expected = "<doc>*Bold*\n_Italic_\n*Emphasis*\n*Header*\n*Strong*\n</doc>"
      expect(doc.send(:cleanup_html, sample)).to eq(expected)
    end

    it 're-format the html link to textile' do
      sample = "<doc>"\
        "<a href='https://drad.is'>DradisLink1</a>\n"\
        "<a target='_blank' href='https://drad.is'><i class='icon-external-link'></i>DradisLink2</a>"\
        "</doc>"

      expected = "<doc>\"DradisLink1\":https://drad.is\n\"DradisLink2\":https://drad.is</doc>"
      expect(doc.send(:cleanup_html, sample)).to eq(expected)
    end
  end
end
